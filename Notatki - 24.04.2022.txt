1. Alternatywa dla partial View - tak zwane komponenty.

PPM - Controlers (WWW) -> dodajemy klasę "RodzajeMenuComponents"
Zrobiona klasa -> Screen nr1

PPM na Views -> Sklep -> Add Folder "Components"
PPM na Components -> Add Folder "RodzajeMenuComponent"
PPM na RodzajeMenuComponent -> Add View RazorViewEmpty o nazwie "RodzajeMenuComponent"
Views -> Shared -> RodzajeMenuComponent -> kopiuj wklej całość do nowego "RodzajeMenuComponent"
Screen nr2

Edytuj Views -> Shared -> _SklepLayout.cshtml zmieniamy PatrialAsync na @await Component.InvokeAsync("RodzajeMenuComponent")

2. Najpierw Towary promowane (Procedura wyświetlania towarów promowanych) (WWW)

Firma.Data -> Data -> Sklep -> Towar.cs 
[Display(Name = "Towar jest promowany")
Dodajemy public bool Promocja {get; set;}

Migracja bazy danych

Set as startup na WWW.

Sklep Controler zmieniamy w Task<IActionResult> Index
 if (id == null) return View(await _context.Towar.Where(t => t.Promocja).ToListAsync());
            else return View(await _context.Towar.Where(t => t.IdRodzaju == id).ToListAsync());
screen nr3
Dodaj metodę promocje -> screen nr4
PPM na promocje i add view -> razor View Empty

Wzorując się na widoku views -> sklep -> index - utwórz widok promocje
W pliku Views->Shared->OdnosnikiHtml zmodyfikuj link do sklepu internetowego tak by kierował do promocji


3. Robienie koszyka (następnie kupowanie / zamawianie)

- Robimy w Firma.Data

PPM na Data -> Sklep -> Add class "ElementKoszyka"
ElementKoszyka -> Screen nr 6

Edytuj Firma.Data -> Data -> FirmaContext 
Dodajemy DbSet -> public DbSet<ElementKoszyka> ElementKoszyka { get; set; }

Aktualizacja bazy danych -> Migracja

- Wszystkie poniższe elementy wykonuj w Firma.PortalWWW

PPM na Models -> Add New Folder "BusinessLogic"
PPM na BusinessLogic -> Add class "KoszykB"
KoszykB(Towar towar) -> Screen nr 7, 8, 9, 10



